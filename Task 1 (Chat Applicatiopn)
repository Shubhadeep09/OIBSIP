#Client part
import socket

client_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
client_socket.connect(('127.0.0.1', 5555))

while True:
    message = input("Your message: ")
    if message.lower() == "exit":
        break
    client_socket.send(message.encode('utf-8'))
    response = client_socket.recv(1024).decode('utf-8')
    print(f"Server: {response}")

client_socket.close()


#Server part


import socket
import threading

def handle_client(client_socket, address):
    while True:
        message = client_socket.recv(1024).decode('utf-8')
        if message.lower() == "exit":
            break
        print(f"Client {address}: {message}")
        response = input("Your response: ")
        client_socket.send(response.encode('utf-8'))
    client_socket.close()

server_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
server_socket.bind(('127.0.0.1', 5555))
server_socket.listen(5)

print("Server is listening for incoming connections...")

while True:
    client_socket, address = server_socket.accept()
    print(f"Connection from {address} has been established!")
    client_handler = threading.Thread(target=handle_client, args=(client_socket, address))
    client_handler.start()
